{
  "$schema": "http://json-schema.org/schema",
  "$schemaVersion": "0.0.1",
  "$id": "https://smart-data-models.github.io/dataModel.//schema.json",
  "title": "Smart Data models -  schema",
  "modelTags": "",
  "description": "This class represents ",
  "required": [
    "id",
    "type"
  ],
  "allOf": [
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
    },
    {
      "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
    },
    {
      "properties": {
        "PerfMetricJob": {
                "description": "This IOC represents a performance metric production job. It can be name-contained by SubNetwork, ManagedElement, or ManagedFunction. To activate the production of the specified performance metrics, a MnS consumer needs to create a PerfMetricJob instance on the MnS producer and ensure that the adminState is sUNLOCKED\u003e. For ultimate deactivation of metric production, the MnS consumer should delete the job to free up resources on the MnS producer. For temporary suspension of metric production, the MnS consumer can manipulate the value of the administrative state attribute. The MnS producer may disable metric production as well, for example in overload situations. This situation is indicated by the MnS producer with setting the operational state attribute to disabled. When production is resumed the operational state is set again to enabled. The jobId attribute can be used to associate metrics from multiple PerfMetricJob instances. The jobId can be included when reporting performance metrics to allow a MnS consumer to associate received metrics for the same purpose. For example, it is possible to configure the same jobId value for multiple PerfMetricJob instances required to produce the measurements for a specific KPI. The attribute performanceMetrics defines the performance metrics to be produced and the attribute granularityPeriod defines the granularity period to be applied. All object instances below and including the instance name-containing the PerfMetricJob (base object instance) are scoped for performance metric production. Performance metrics are produced only on those object instances whose object class matches the object class associated to the performance metrics to be produced. The attributes objectInstances and rootObjectInstances allow to restrict the scope. When the attribute objectInstances is present, only the object instances identified by this attribute are scoped. When the attribute rootObjectInstances is present, then the subtrees whose root objects are identified by this attribute are scoped. Both attributes may be present at the same time meaning the total scope is equal to the sum of both scopes. Object instances may be scoped by both the objectInstances and rootObjectInstances attributes. This shall not be considered as an error by the MnS producer. When the performance metric requires performance metric production on multiple managed objects, which is for example the case for KPIs, the MnS consumer needs to ensure all required objects are scoped. Otherwise a PerfMetricJob creation request shall fail. The attribute reportingCtrl specifies the method and associated control parameters for reporting the produced measurements to MnS consumers. Three methods are available: file-based reporting with selection of the file location by the MnS producer, file-based reporting with selection of the file location by the MnS consumer and stream-based reporting. A PerfMetricJob creation request shall fail, when the requested performance metrics, the requested granularity period, the requested repoting method, or the requested combination thereof is not supported by the MnS producer. Creation and deletion of PerfMetricJob instances by MnS consumers is optional; when not supported, PerfMetricJob instances may be created and deleted by the system or be pre-installed.",
                "type": "string"
        },
        "SupportedPerfMetricGroup": {
                "description": "Captures a group of supported performance metrics and associated parameters related to their production and reporting. A SupportedPerfMetricGroup attribute which is part of an MOI may define performanceMetrics for any MOI under the subtree contained under that MOI, e.g. SupportedPerfMetricGroup on a ManagedElement can specify supported metrics for contained ManagedFunctions like a GNBDUFunction.",
                "items": {
                        "type": "string"
                },
                "type": "array"
        },
        "ThresholdMonitor": {
                "description": "Represents a threshold monitor for performance metrics. It can be contained by SubNetwork, ManagedElement, or ManagedFunction. A threshold monitor checks for threshold crossings of performance metric values and generates a notification when that happens. To activate threshold monitoring, a MnS consumer needs to create a ThresholdMonitor instance on the MnS producer. For ultimate deactivation of threshold monitoring, the MnS consumer should delete the monitor to free up resources on the MnS producer. For temporary suspension of threshold monitoring, the MnS consumer can manipulate the value of the administrative state attribute. The MnS producer may disable threshold monitoring as well, for example in overload situations. This situation is indicated by the MnS producer with setting the operational state attribute to disabled. When monitoring is resumed the operational state is set again to enabled. All object instances below and including the instance containing the ThresholdMonitor (base object instance) are scoped for performance metric production. Performance metrics are monitored only on those object instances whose object class matches the object class associated to the performance metrics to be monitored. The optional attributes objectInstances and rootObjectInstances allow to restrict the scope. When the attribute objectInstances is present, only the object instances identified by this attribute are scoped. When the attribute rootObjectInstances is present, then the subtrees whose root objects are identified by this attribute are scoped. Both attributes may be present at the same time meaning the total scope is equal to the sum of both scopes. Object instances may be scoped by both the objectInstances and rootObjectInstances attributes. This shall not be considered as an error by the MnS producer. Multiple thresholds can be defined for multiple performance metric sets in a single monitor using thresholdInfoList. The attribute monitorGranularityPeriod defines the granularity period to be applied. Each threshold is identified with a number (key) called thresholdLevel. A threshold is defined using the attributes thresholdValue , thresholdDirection and hysteresis. When hysteresis is absent or carries no information, a threshold is triggered when the thresholdValue is reached or crossed. When hysteresis is present, two threshold values are specified for the threshold as follows: A high treshold value equal to the threshold value plus the hysteresis value, and a low threshold value equal to the threshold value minus the hysteresis value. When the monitored performance metric increases, the threshold is triggered when the high threshold value is reached or crossed. When the monitored performance metric decreases, the threshold is triggered when the low threshold value is reached or crossed. The hsyteresis ensures that the performance metric value can oscillate around a comparison value without triggering each time the threshold when the threshold value is crossed. Using the thresholdDirection attribute a threshold can be configured in such a manner that it is triggered only when the monitored performance metric is going up or down upon reaching or crossing the threshold. A ThresholdMonitor creation request shall be rejected, if the performance metrics requested to be monitored, the requested granularity period, or the requested combination thereof is not supported by the MnS producer. A creation request may fail, when the performance metrics requested to be monitored are not produced by a PerfMetricJob. Creation and deletion of ThresholdMonitor instances by MnS consumers is optional; when not supported, ThresholdMonitor instances may be created and deleted by the system or be pre-installed.",
                "type": "string"
        },
        "ThresholddirectionEnum": {
                "description": "Direction of a threshold indicating the direction for which a threshold crossing triggers a threshold. When the threshold direction is configured to \u0027UP\u0027, the associated treshold is triggered only when the performance metric value is going up upon reaching or crossing the threshold value. The treshold is not triggered, when the performance metric is going down upon reaching or crossing the threshold value. Vice versa, when the threshold direction is configured to \u0027DOWN\u0027, the associated treshold is triggered only when the performance metric is going down upon reaching or crossing the threshold value. The treshold is not triggered, when the performance metric is going up upon reaching or crossing the threshold value. When the threshold direction is set to \u0027UP_AND_DOWN\u0027 the treshold is active in both direcions. In case a threshold with hysteresis is configured, the threshold direction attribute shall be set to \u0027UP_AND_DOWN\u0027.",
                "enum": [
                        "UP",
                        "UP_AND_DOWN",
                        "DOWN"
                ],
                "type": "string"
        },
        "administrativeState": {
                "description": "Enable or disables production of the metrics",
                "type": "string"
        },
        "granularityPeriod": {
                "description": "Granularity period used to produce measurements. The value must be one of the supported granularity periods for the metric.",
                "type": "integer"
        },
        "hysteresis": {
                "description": "Hysteresis of a threshold. If this attribute is present the monitored performance metric is not compared against the threshold value as specified by the thresholdValue attribute but against a high and low threshold value given by threshold-high = thresholdValue + hysteresis threshold-low = thresholdValue - hysteresis When going up, the threshold is triggered when the performance metric reaches or crosses the high threshold value. When going down, the hreshold is triggered when the performance metric reaches or crosses the low threshold value. A hysteresis may be present only when the monitored performance metric is not of type counter that can go up only. If present for a performance metric of type counter, it shall be ignored.",
                "type": "string"
        },
        "jobId": {
                "description": "Id for a PerfMetricJob job.",
                "type": "string"
        },
        "monitorGranularityPeriod": {
                "description": "Granularity period used to monitor measurements for threshold crossings.",
                "type": "integer"
        },
        "operationalState": {
                "description": "Indicates whether the PerfMetricJob is working.",
                "type": "string"
        },
        "thresholdDirection": {
                "description": "Direction of a threshold indicating the direction for which a threshold crossing triggers a threshold. When the threshold direction is configured to \u0027UP\u0027, the associated treshold is triggered only when the performance metric value is going up upon reaching or crossing the threshold value. The treshold is not triggered, when the performance metric is going down upon reaching or crossing the threshold value. Vice versa, when the threshold direction is configured to \u0027DOWN\u0027, the associated treshold is triggered only when the performance metric is going down upon reaching or crossing the threshold value. The treshold is not triggered, when the performance metric is going up upon reaching or crossing the threshold value. When the threshold direction is set to \u0027UP_AND_DOWN\u0027 the treshold is active in both direcions. In case a threshold with hysteresis is configured, the threshold direction attribute shall be set to \u0027UP_AND_DOWN\u0027.",
                "enum": [
                        "UP",
                        "UP_AND_DOWN",
                        "DOWN"
                ],
                "type": "string"
        },
        "thresholdInfoList": {
                "description": "Property",
                "items": {
                        "type": "string"
                },
                "type": "array"
        },
        "thresholdLevel": {
                "description": "Number (key) for a single threshold in the threshold list applicable to the monitored performance metric.",
                "type": "integer"
        },
        "thresholdValue": {
                "description": "Value against which the monitored performance metric is compared at a threshold level in case the hysteresis is zero",
                "type": "string"
        }
}
    }
  ],
  "derivedFrom": "3GPP TS 28.541",
  "license": ""
}